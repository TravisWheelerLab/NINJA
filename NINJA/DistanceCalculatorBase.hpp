#ifndef DISTANCECALCULATORBASE_HPP
#define DISTANCECALCULATORBASE_HPP

#include <iostream>
#include <x86intrin.h> // AVX / SSE

template <class T>
class DistanceCalculatorBase
{
public:
    virtual double calc(int a, int b);

    virtual double testDifferenceCluster(int a, int b);

protected:
	T xDNA;
	T zeroDNA;
	T GAPS_COUNT_MASK;
    __m128i xProtein;
    __m128i zeroProtein;

	T DECOMPRESSED_GAPS;
	T COUNTS_MASK;
	T TRANSITIONS_MASK;
	T TRANSVERSIONS_MASK;

	__m128i VALUES_0;
	__m128i VALUES_1;
	__m128i VALUES_2;
	__m128i VALUES_3;
	__m128i VALUES_4;
	__m128i VALUES_5;
	__m128i VALUES_6;
	__m128i VALUES_7;

	int numberOfSequences;
	int lengthOfSequences;

	//TODO: set this as true only if it has support for SSE3
	bool newCalculation;

	AlphabetType alph_type;
	CorrectionType corr_type;

	std::string dna_chars;
	std::string aa_chars;
	std::string **A;

	unsigned int **convertedSequences;
	unsigned int **gapInTheSequences;

	enum CorrectionType
	{
		not_assigned,
		none,
		JukesCantor /*DNA*/,
		Kimura2 /*DNA*/,
		FastTree /*amino*/
	};

	enum AlphabetType
	{
		dna,
		amino,
		null
	};

    static const float bl45[21][21];

    int *getInverseAlphabet(std::string alphabet, int length)
    {
        int *inv_alph = new int[256];
        for (int i = 0; i < 256; i++)
            inv_alph[i] = -1;
        for (int i = 0; i < length; i++)
            inv_alph[(int)alphabet[i]] = i;
        return inv_alph;
    }


	void countBitWidth(
        register T &seq1,
        register T &seq2,
        register T &gap1,
        register T &gap2,
        register T &tmp,
        register T &tmp2,
        register T &tmp3,
        register T &count_transversions,
        register T &count_transitions,
        register T &count_gaps);
};

const float DistanceCalculatorBase::bl45[21][21] = {
    {0.0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
    {0.0, 0, 1.31097856, 1.06573001, 1.26827829, 0.90471293, 1.05855446, 1.05232790, 0.76957444, 1.27579668, 0.96460409, 0.98717819, 1.05007594, 1.05464162, 1.19859874, 0.96740447, 0.70049019, 0.88006018, 1.09748548, 1.28141710, 0.80003850},
    {0.0, 1.31097856, 0, 0.80108902, 0.95334071, 1.36011107, 0.63154377, 0.79101490, 1.15694899, 0.76115257, 1.45014917, 1.17792001, 0.39466107, 0.99880755, 1.13514340, 1.15432562, 1.05309036, 1.05010474, 1.03938321, 0.96321690, 1.20274751},
    {0.0, 1.06573001, 0.80108902, 0, 0.48821721, 1.10567116, 0.81497020, 0.81017644, 0.74648741, 0.61876156, 1.17886558, 1.52003670, 0.80844267, 1.28890258, 1.16264109, 1.18228799, 0.67947568, 0.85365861, 1.68988558, 1.24297493, 1.55207513},
    {0.0, 1.26827829, 0.95334071, 0.48821721, 0, 1.31581050, 0.76977847, 0.48207762, 0.88836175, 0.73636084, 1.76756333, 1.43574761, 0.76361291, 1.53386612, 1.74323672, 0.88634740, 0.80861404, 1.01590147, 1.59617804, 1.17404948, 1.46600946},
    {0.0, 0.90471293, 1.36011107, 1.10567116, 1.31581050, 0, 1.38367893, 1.37553994, 1.26740695, 1.32361065, 1.26087264, 1.02417540, 1.37259631, 1.09416720, 0.98698208, 1.59321190, 0.91563878, 0.91304285, 1.80744143, 1.32944171, 0.83002214},
    {0.0, 1.05855446, 0.63154377, 0.81497020, 0.76977847, 1.38367893, 0, 0.50694279, 1.17699648, 0.61459544, 1.17092829, 1.19833088, 0.63734107, 0.80649084, 1.83315144, 0.93206447, 0.85032169, 1.06830084, 1.05739353, 0.97990742, 1.54162503},
    {0.0, 1.05232790, 0.79101490, 0.81017644, 0.48207762, 1.37553994, 0.50694279, 0, 1.17007322, 0.76978695, 1.46659942, 1.19128214, 0.63359215, 1.27269395, 1.44641491, 0.73542857, 0.84531998, 1.06201695, 1.32439599, 1.22734387, 1.53255698},
    {0.0, 0.76957444, 1.15694899, 0.74648741, 0.88836175, 1.26740695, 1.17699648, 1.17007322, 0, 1.12590070, 1.70254155, 1.38293205, 1.16756929, 1.17264582, 1.33271035, 1.07564768, 0.77886828, 1.23287107, 0.96853965, 1.42479529, 1.41208067},
    {0.0, 1.27579668, 0.76115257, 0.61876156, 0.73636084, 1.32361065, 0.61459544, 0.76978695, 1.12590070, 0, 1.41123246, 1.14630894, 0.96779528, 0.77147945, 1.10468029, 1.12334774, 1.02482926, 1.28754326, 1.27439749, 0.46868384, 1.47469999},
    {0.0, 0.96460409, 1.45014917, 1.17886558, 1.76756333, 1.26087264, 1.17092829, 1.46659942, 1.70254155, 1.41123246, 0, 0.43335051, 1.46346092, 0.46296554, 0.66291968, 1.07010201, 1.23000200, 0.97348545, 0.96354620, 0.70872476, 0.35120011},
    {0.0, 0.98717819, 1.17792001, 1.52003670, 1.43574761, 1.02417540, 1.19833088, 1.19128214, 1.38293205, 1.14630894, 0.43335051, 0, 1.49770950, 0.47380007, 0.53847312, 1.37979627, 1.58597231, 0.99626739, 0.98609554, 0.72531066, 0.57054219},
    {0.0, 1.05007594, 0.39466107, 0.80844267, 0.76361291, 1.37259631, 0.63734107, 0.63359215, 1.16756929, 0.96779528, 1.46346092, 1.49770950, 0, 1.00797618, 1.44331961, 0.92459908, 1.06275728, 1.05974425, 1.04892430, 0.97205882, 1.21378822},
    {0.0, 1.05464162, 0.99880755, 1.28890258, 1.53386612, 1.09416720, 0.80649084, 1.27269395, 1.17264582, 0.77147945, 0.46296554, 0.47380007, 1.00797618, 0, 0.72479754, 1.16998686, 1.34481214, 1.06435197, 1.05348497, 0.77487815, 0.60953285},
    {0.0, 1.19859874, 1.13514340, 1.16264109, 1.74323672, 0.98698208, 1.83315144, 1.44641491, 1.33271035, 1.10468029, 0.66291968, 0.53847312, 1.44331961, 0.72479754, 0, 1.32968844, 1.21307373, 0.96008757, 0.47514255, 0.34948536, 0.69273324},
    {0.0, 0.96740447, 1.15432562, 1.18228799, 0.88634740, 1.59321190, 0.93206447, 0.73542857, 1.07564768, 1.12334774, 1.07010201, 1.37979627, 0.92459908, 1.16998686, 1.32968844, 0, 0.97908742, 0.97631161, 1.21751652, 1.42156458, 1.40887880},
    {0.0, 0.70049019, 1.05309036, 0.67947568, 0.80861404, 0.91563878, 0.85032169, 0.84531998, 0.77886828, 1.02482926, 1.23000200, 1.58597231, 1.06275728, 1.34481214, 1.21307373, 0.97908742, 0, 0.56109848, 1.76318885, 1.29689226, 1.02015839},
    {0.0, 0.88006018, 1.05010474, 0.85365861, 1.01590147, 0.91304285, 1.06830084, 1.06201695, 1.23287107, 1.28754326, 0.97348545, 0.99626739, 1.05974425, 1.06435197, 0.96008757, 0.97631161, 0.56109848, 0, 1.39547634, 1.02642577, 0.80740466},
    {0.0, 1.09748548, 1.03938321, 1.68988558, 1.59617804, 1.80744143, 1.05739353, 1.32439599, 0.96853965, 1.27439749, 0.96354620, 0.98609554, 1.04892430, 1.05348497, 0.47514255, 1.21751652, 1.76318885, 1.39547634, 0, 0.32000293, 1.26858915},
    {0.0, 1.28141710, 0.96321690, 1.24297493, 1.17404948, 1.32944171, 0.97990742, 1.22734387, 1.42479529, 0.46868384, 0.70872476, 0.72531066, 0.97205882, 0.77487815, 0.34948536, 1.42156458, 1.29689226, 1.02642577, 0.32000293, 0, 0.93309543},
    {0.0, 0.80003850, 1.20274751, 1.55207513, 1.46600946, 0.83002214, 1.54162503, 1.53255698, 1.41208067, 1.47469999, 0.35120011, 0.57054219, 1.21378822, 0.60953285, 0.69273324, 1.40887880, 1.02015839, 0.80740466, 1.26858915, 0.93309543, 0}}

#endif
